<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMGAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQABAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAIAAAACAAAAAwABAAMAAAACAAAAAwAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AADwAH/8AB8AAPwAP/gAfwAA/gA/+AD/AAD/AB/wAf8AAP+AD+AD/wAA/8AHwAf/
        AAD/4AOAD/8AAP/wAYAf/wAA//gA4D//AAD//ABgf/8AAP/+ADB//wAA//8AGf//AAD//4Af//8AAP//
        gA///wAA///AB///AAD//4AP//8AAP//AB3//wAA//4AOP//AAD//ABwf/8AAP/4AOA//wAA//ABwB//
        AAD/4AOAD/8AAP/AB8AH/wAA/4AP4AP/AAD/AB/wAf8AAP4AP/gA/wAA/AB//AB/AAD//////38AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>